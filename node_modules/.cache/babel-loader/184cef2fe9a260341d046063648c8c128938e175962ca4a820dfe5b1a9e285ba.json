{"ast":null,"code":"var _jsxFileName = \"/Users/shalom/Desktop/lcd/overlay-app/src/SideSelectionOverlay.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./sideSelectionOverlay.css\";\nimport afkLogo from \"./assets/team-2-logo-only.png\";\nimport uw3Logo from \"./assets/team-3-logo-only.png\";\n\n// Default logos mapping\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultLogos = {\n  afk: afkLogo,\n  uw3: uw3Logo\n};\nexport default function SideSelectionOverlay() {\n  _s();\n  const {\n    side,\n    teamName,\n    logo\n  } = useParams();\n  const isBlue = side === \"blue\";\n\n  // Determine the logo source: URL parameter, default mapping, or fallback\n  let logoSrc;\n  if (logo) {\n    // If logo parameter is provided, check if it's a key in defaultLogos or use it as URL\n    logoSrc = defaultLogos[logo] || logo;\n  } else {\n    // Fallback to a default logo based on side\n    logoSrc = isBlue ? afkLogo : uw3Logo;\n  }\n\n  // Use teamName from URL or fallback to default\n  const displayTeamName = teamName || (isBlue ? \"T1\" : \"KT\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `side-selection-overlay ${isBlue ? \"blue\" : \"red\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoSrc,\n      alt: displayTeamName,\n      className: \"side-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"side-team\",\n        children: displayTeamName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"side-label\",\n        children: isBlue ? \"BLUE\" : \"RED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(SideSelectionOverlay, \"nwqMPNLX1d0nscOCsr9IMeGw8rA=\", false, function () {\n  return [useParams];\n});\n_c = SideSelectionOverlay;\nvar _c;\n$RefreshReg$(_c, \"SideSelectionOverlay\");","map":{"version":3,"names":["React","useParams","afkLogo","uw3Logo","jsxDEV","_jsxDEV","defaultLogos","afk","uw3","SideSelectionOverlay","_s","side","teamName","logo","isBlue","logoSrc","displayTeamName","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shalom/Desktop/lcd/overlay-app/src/SideSelectionOverlay.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./sideSelectionOverlay.css\";\nimport afkLogo from \"./assets/team-2-logo-only.png\";\nimport uw3Logo from \"./assets/team-3-logo-only.png\";\n\n// Default logos mapping\nconst defaultLogos = {\n  afk: afkLogo,\n  uw3: uw3Logo,\n};\n\nexport default function SideSelectionOverlay() {\n  const { side, teamName, logo } = useParams();\n  const isBlue = side === \"blue\";\n  \n  // Determine the logo source: URL parameter, default mapping, or fallback\n  let logoSrc;\n  if (logo) {\n    // If logo parameter is provided, check if it's a key in defaultLogos or use it as URL\n    logoSrc = defaultLogos[logo] || logo;\n  } else {\n    // Fallback to a default logo based on side\n    logoSrc = isBlue ? afkLogo : uw3Logo;\n  }\n  \n  // Use teamName from URL or fallback to default\n  const displayTeamName = teamName || (isBlue ? \"T1\" : \"KT\");\n\n  return (\n    <div className={`side-selection-overlay ${isBlue ? \"blue\" : \"red\"}`}>\n      <img src={logoSrc} alt={displayTeamName} className=\"side-logo\" />\n      <div className=\"side-info\">\n        <span className=\"side-team\">{displayTeamName}</span>\n        <span className=\"side-label\">{isBlue ? \"BLUE\" : \"RED\"}</span>\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,4BAA4B;AACnC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,OAAO,MAAM,+BAA+B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAEL,OAAO;EACZM,GAAG,EAAEL;AACP,CAAC;AAED,eAAe,SAASM,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC7C,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC5C,MAAMa,MAAM,GAAGH,IAAI,KAAK,MAAM;;EAE9B;EACA,IAAII,OAAO;EACX,IAAIF,IAAI,EAAE;IACR;IACAE,OAAO,GAAGT,YAAY,CAACO,IAAI,CAAC,IAAIA,IAAI;EACtC,CAAC,MAAM;IACL;IACAE,OAAO,GAAGD,MAAM,GAAGZ,OAAO,GAAGC,OAAO;EACtC;;EAEA;EACA,MAAMa,eAAe,GAAGJ,QAAQ,KAAKE,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;EAE1D,oBACET,OAAA;IAAKY,SAAS,EAAE,0BAA0BH,MAAM,GAAG,MAAM,GAAG,KAAK,EAAG;IAAAI,QAAA,gBAClEb,OAAA;MAAKc,GAAG,EAAEJ,OAAQ;MAACK,GAAG,EAAEJ,eAAgB;MAACC,SAAS,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjEnB,OAAA;MAAKY,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBb,OAAA;QAAMY,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEF;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpDnB,OAAA;QAAMY,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEJ,MAAM,GAAG,MAAM,GAAG;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CA1BuBD,oBAAoB;EAAA,QACTR,SAAS;AAAA;AAAAwB,EAAA,GADpBhB,oBAAoB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}