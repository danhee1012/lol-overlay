{"ast":null,"code":"var _jsxFileName = \"/Users/shalom/Desktop/lcd/overlay-app/src/PredictionsOverlay.js\";\nimport React from \"react\";\nimport predictions from \"./assets/predictions.json\";\nimport \"./overlay.css\";\nimport afkLogo from \"./assets/team-2-logo-only.png\";\nimport uw3Logo from \"./assets/team-3-logo-only.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst teamLogo = {\n  afk: afkLogo,\n  uw3: uw3Logo\n};\nconst teamClass = {\n  afk: \"afk-win\",\n  uw3: \"uw3-win\"\n};\nexport default function PredictionsOverlay() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-prediction-label-box\",\n      children: \"Predictions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), predictions.map((pred, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `prediction ${teamClass[pred.winner]} prediction-animated`,\n      style: {\n        animationDelay: `${idx * 0.15}s`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"player\",\n        children: pred.player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"score\",\n        children: pred.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: teamLogo[pred.winner],\n        alt: pred.winner.toUpperCase(),\n        className: \"predicted-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = PredictionsOverlay;\nvar _c;\n$RefreshReg$(_c, \"PredictionsOverlay\");","map":{"version":3,"names":["React","predictions","afkLogo","uw3Logo","jsxDEV","_jsxDEV","teamLogo","afk","uw3","teamClass","PredictionsOverlay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pred","idx","winner","style","animationDelay","player","score","src","alt","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/shalom/Desktop/lcd/overlay-app/src/PredictionsOverlay.js"],"sourcesContent":["import React from \"react\";\nimport predictions from \"./assets/predictions.json\";\nimport \"./overlay.css\";\nimport afkLogo from \"./assets/team-2-logo-only.png\";\nimport uw3Logo from \"./assets/team-3-logo-only.png\";\n\nconst teamLogo = {\n  afk: afkLogo,\n  uw3: uw3Logo,\n};\n\nconst teamClass = {\n  afk: \"afk-win\",\n  uw3: \"uw3-win\",\n};\n\nexport default function PredictionsOverlay() {\n  return (\n    <div className=\"overlay-bar\">\n      <div className=\"score-prediction-label-box\">Predictions</div>\n      {predictions.map((pred, idx) => (\n        <div \n          className={`prediction ${teamClass[pred.winner]} prediction-animated`} \n          key={idx}\n          style={{\n            animationDelay: `${idx * 0.15}s`\n          }}\n        >\n          <span className=\"player\">{pred.player}</span>\n          <span className=\"score\">{pred.score}</span>\n          <img\n            src={teamLogo[pred.winner]}\n            alt={pred.winner.toUpperCase()}\n            className=\"predicted-logo\"\n          />\n        </div>\n      ))}\n    </div>\n  );\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,eAAe;AACtB,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,OAAO,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAG;EACfC,GAAG,EAAEL,OAAO;EACZM,GAAG,EAAEL;AACP,CAAC;AAED,MAAMM,SAAS,GAAG;EAChBF,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE;AACP,CAAC;AAED,eAAe,SAASE,kBAAkBA,CAAA,EAAG;EAC3C,oBACEL,OAAA;IAAKM,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BP,OAAA;MAAKM,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC5Df,WAAW,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACzBd,OAAA;MACEM,SAAS,EAAE,cAAcF,SAAS,CAACS,IAAI,CAACE,MAAM,CAAC,sBAAuB;MAEtEC,KAAK,EAAE;QACLC,cAAc,EAAE,GAAGH,GAAG,GAAG,IAAI;MAC/B,CAAE;MAAAP,QAAA,gBAEFP,OAAA;QAAMM,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAEM,IAAI,CAACK;MAAM;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CX,OAAA;QAAMM,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAEM,IAAI,CAACM;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3CX,OAAA;QACEoB,GAAG,EAAEnB,QAAQ,CAACY,IAAI,CAACE,MAAM,CAAE;QAC3BM,GAAG,EAAER,IAAI,CAACE,MAAM,CAACO,WAAW,CAAC,CAAE;QAC/BhB,SAAS,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC;IAAA,GAXGG,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYL,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACY,EAAA,GAvBuBlB,kBAAkB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}